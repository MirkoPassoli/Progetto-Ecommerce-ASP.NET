@model Ecommerce.Models.ModCorso
@{
    Layout = "~/Views/Admin/_Layout.cshtml";
}

@if (ViewBag.NotValid != null && ViewBag.NotValid)
{
    var dic = new RouteValueDictionary();
    dic.Add("id", null);
    <p>Il corso selezionato non esiste, fai click @Html.ActionLink("qui", "EditCorso", "Admin", dic, null) per aggiungere un nuovo corso</p>
}
else
{
    using (Html.BeginForm("UploadCorso", "Admin", FormMethod.Post, new { enctype = "multipart/form-data" }))
    {
        @Html.HiddenFor(model => model.IsModifica)
        @Html.HiddenFor(model => model.ID)

        <div class="form-group">
            @Html.LabelFor(model => model.Titolo)
            @Html.EditorFor(model => model.Titolo, new { htmlAttributes = new { @class = "form-control", required = "true" } })
            @Html.ValidationMessageFor(model => model.Titolo)
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Autore)
            @Html.EditorFor(model => model.Autore, new { htmlAttributes = new { @class = "form-control", required = "true" } })
            @Html.ValidationMessageFor(model => model.Autore)
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Descrizione)
            @Html.TextAreaFor(model => model.Descrizione, 3, 0, new { @class = "form-control", required = "true" })
            @Html.ValidationMessageFor(model => model.Descrizione)
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Prezzo)
            @Html.EditorFor(model => model.Prezzo, new { htmlAttributes = new { @class = "form-control", type = "number", step = "0.01", required = "true" } })
            @Html.ValidationMessageFor(model => model.Prezzo)
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.File)
            @if (Model.IsModifica)
            {
                <br />
                <img src="~/Content/img/@Model.Immagine" height="150" />
                <br />
            }
            <br /><input type="file" name="file" required />
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.IDCategoria)
            @Html.DropDownListFor(model => model.IDCategoria, Model.Categorie, "Seleziona una categoria", new { @class = "form-control", required = "true" })
            @Html.ValidationMessageFor(model => model.IDCategoria)
        </div>

        <input type="submit" value="@ViewBag.Title" />
    }
}